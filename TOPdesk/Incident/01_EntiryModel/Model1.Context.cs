//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TOPdesk._01_EntiryModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TopDesk577Entities : DbContext
    {
        public TopDesk577Entities()
            : base("name=TopDesk577Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<incident> incidents { get; set; }
    
        [DbFunction("TopDesk577Entities", "UTVF_IncidentsMovedToOperator")]
        public virtual IQueryable<UTVF_IncidentsMovedToOperator_Result> UTVF_IncidentsMovedToOperator(Nullable<System.Guid> operatorID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var operatorIDParameter = operatorID.HasValue ?
                new ObjectParameter("operatorID", operatorID) :
                new ObjectParameter("operatorID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UTVF_IncidentsMovedToOperator_Result>("[TopDesk577Entities].[UTVF_IncidentsMovedToOperator](@operatorID, @startDate, @endDate)", operatorIDParameter, startDateParameter, endDateParameter);
        }
    
        [DbFunction("TopDesk577Entities", "UTVF_IncidentOperatorMovements")]
        public virtual IQueryable<UTVF_IncidentOperatorMovements_Result> UTVF_IncidentOperatorMovements(string incident)
        {
            var incidentParameter = incident != null ?
                new ObjectParameter("incident", incident) :
                new ObjectParameter("incident", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UTVF_IncidentOperatorMovements_Result>("[TopDesk577Entities].[UTVF_IncidentOperatorMovements](@incident)", incidentParameter);
        }
    
        public virtual int USP_GetIncidentsOperatorOperatorGroupMovements(Nullable<int> operatorOrOperatorGroup, Nullable<System.Guid> operatorID, Nullable<System.Guid> operatorGroupID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var operatorOrOperatorGroupParameter = operatorOrOperatorGroup.HasValue ?
                new ObjectParameter("operatorOrOperatorGroup", operatorOrOperatorGroup) :
                new ObjectParameter("operatorOrOperatorGroup", typeof(int));
    
            var operatorIDParameter = operatorID.HasValue ?
                new ObjectParameter("operatorID", operatorID) :
                new ObjectParameter("operatorID", typeof(System.Guid));
    
            var operatorGroupIDParameter = operatorGroupID.HasValue ?
                new ObjectParameter("operatorGroupID", operatorGroupID) :
                new ObjectParameter("operatorGroupID", typeof(System.Guid));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_GetIncidentsOperatorOperatorGroupMovements", operatorOrOperatorGroupParameter, operatorIDParameter, operatorGroupIDParameter, startDateParameter, endDateParameter);
        }
    }
}
